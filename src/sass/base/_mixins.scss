@function strip-unit($value) {
	@return $value / ($value * 0 + 1);
}

@mixin fluid-type($min-vw, $max-vw, $min-font-size, $max-font-size) {
	$u1: unit($min-vw);
	$u2: unit($max-vw);
	$u3: unit($min-font-size);
	$u4: unit($max-font-size);

	@if $u1==$u2 and $u1==$u3 and $u1==$u4 {
		& {
			font-size: $min-font-size;

			@media screen and (min-width: $min-vw) {
				font-size: calc(
					#{$min-font-size} + #{strip-unit($max-font-size - $min-font-size)} *
						((100vw - #{$min-vw}) / #{strip-unit($max-vw - $min-vw)})
				);
			}

			@media screen and (min-width: $max-vw) {
				font-size: $max-font-size;
			}
		}
	}
}

//Breakpoints
@mixin breakpoint-up($breakpoint) {
	@if map-has-key($breakpoints, $breakpoint) {
		@media (min-width: map-get($breakpoints, $breakpoint)) {
			@content;
		}
	} @else {
		@warn "Unfortunately, no value could be retrieved from `#{$breakpoint}`. "
			+ "Available breakpoints are: #{map-keys($breakpoints)}.";
	}
}
@mixin breakpoint-down($breakpoint) {
	@if map-has-key($breakpoints, $breakpoint) {
		@media (max-width: map-get($breakpoints, $breakpoint)) {
			@content;
		}
	} @else {
		@warn "Unfortunately, no value could be retrieved from `#{$breakpoint}`. "
			+ "Available breakpoints are: #{map-keys($breakpoints)}.";
	}
}
// Link Effect Mixin
@mixin link-effect($color: inherit, $bottom: -2px, $height: 2px) {
	position: relative;
	display: inline-block;

	&:after {
		content: "";
		position: absolute;
		bottom: $bottom;
		left: 0;
		width: 0%;
		height: $height;
		background-color: $color;
		visibility: hidden;
		transition: width 0.5s ease-in-out;
	}

	&:hover {
		&:after {
			visibility: visible;
			width: 50%;
		}
	}
}

// Button Rows
@mixin buttons_row($align) {
	display: flex;

	.et_pb_column {
		flex: 1;
		display: flex;
		flex-wrap: wrap;
		justify-content: $align;

		.et_pb_button_module_wrapper {
			display: flex;
			flex-grow: 1;
			margin-bottom: 0;
			a {
				text-align: center;
				flex: 1;
			}
			& + .et_pb_button_module_wrapper {
				margin-left: 0;
			}
			@include breakpoint-up(xs) {
				flex-grow: unset;
				& + .et_pb_button_module_wrapper {
					margin-left: 1rem;
				}
			}
		}
	}
}
